/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        btMo {
            bindings = <&mo 3>;
            key-positions = <56 57>;
        };
    };

    macros {
        codeFence: codeFence {
            compatible = "zmk,behavior-macro";
            label = "new_macro";
            #binding-cells = <0>;
            bindings =
                <&kp GRAVE &kp GRAVE &kp GRAVE &kp RET &kp RET &kp GRAVE &kp GRAVE &kp GRAVE &kp UP>,
                <&macro_press>;
        };
        alt_f4: alt_f4 {
            compatible = "zmk,behavior-macro";
            label = "ALT_F4";
            #binding-cells = <0>;
            bindings = <&kp LALT &kp F4>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        BASE {
            bindings = <
&kp GRAVE         &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4    &kp NUMBER_5    &kp NUMBER_6  &kp NUMBER_7     &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0  &kp BACKSPACE
&kp TAB           &kp Q         &kp W         &kp E         &kp R           &kp T           &kp Y         &kp U            &kp I         &kp O         &kp P         &kp BACKSLASH
&kp LCTRL         &kp A         &kp S         &kp D         &kp F           &kp G           &kp H         &kp J            &kp K         &kp L         &kp SEMI      &kp APOS
&kp LEFT_SHIFT    &kp Z         &kp X         &kp C         &kp V           &kp B           &kp N         &kp M            &kp COMMA     &kp PERIOD    &kp SLASH     &kp RIGHT_SHIFT
&kp LEFT_COMMAND  &mo 1         &kp ENTER     &kp ESCAPE    &kp LEFT_SHIFT                                &kp RIGHT_SHIFT  &kp LC(B)     &kp SPACE     &mo 2         &kp RIGHT_ALT
            >;
        };

        RSE {
            bindings = <
&kp TILDE         &kp EXCL        &kp AT_SIGN       &kp HASH              &kp DOLLAR     &kp PERCENT         &kp CARET         &kp AMPERSAND          &kp ASTERISK       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp BACKSPACE
&kp LS(TAB)       &kp LEFT_BRACE  &kp LEFT_BRACKET  &kp LEFT_PARENTHESIS  &kp LESS_THAN  &kp LEFT_BRACKET    &kp GREATER_THAN  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACKET  &kp RIGHT_BRACE       &kp EQUAL              &kp PIPE
&kp LC(LEFT_ALT)  &kp LEFT_BRACE  &kp LEFT_BRACKET  &kp LEFT_PARENTHESIS  &kp LESS_THAN  &kp LEFT_BRACE      &kp LEFT          &kp DOWN_ARROW         &kp UP_ARROW       &kp RIGHT_ARROW       &kp MINUS              &kp MINUS
&trans            &trans          &trans            &codeFence            &trans         &trans              &trans            &trans                 &trans             &trans                &kp PLUS               &trans
&trans            &trans          &trans            &trans                &trans                                               &trans                 &kp RETURN         &trans                &trans                 &trans
            >;
        };

        LWR {
            bindings = <
&kp F12         &kp F1        &kp F2      &kp F3                &kp F4                &kp F5    &kp F6           &kp F7           &kp F8           &kp F9           &kp F10          &kp F11
&kp TAB         &trans        &kp K_MUTE  &kp C_VOLUME_DOWN     &kp C_VOLUME_UP       &trans    &trans           &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_NUMBER_0  &kp KP_MULTIPLY
&kp LEFT_SHIFT  &trans        &kp C_PREV  &kp C_PLAY_PAUSE      &kp C_NEXT            &trans    &trans           &kp KP_N4        &kp KP_N5        &kp KP_N6        &kp KP_PLUS      &kp KP_DIVIDE
&kp LCTRL       &trans        &trans      &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &trans    &kp KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_N2        &kp KP_N3        &kp KP_MINUS     &trans
&trans          &kp LEFT_ALT  &kp SPACE   &kp LEFT_GUI          &kp LEFT_SHIFT                                   &kp SPACE        &kp LEFT_GUI     &kp LEFT_SHIFT   &trans           &trans
            >;
        };

        BT {
            bindings = <
&trans  &trans  &trans  &trans       &alt_f4  &trans    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR
&trans  &trans  &trans  &trans       &trans   &trans    &trans        &trans        &trans        &trans        &trans        &trans
&trans  &trans  &trans  &trans       &trans   &trans    &trans        &trans        &trans        &trans        &trans        &trans
&trans  &trans  &trans  &trans       &trans   &trans    &trans        &trans        &trans        &trans        &trans        &trans
&trans  &trans  &trans  &bootloader  &trans                           &trans        &sys_reset    &trans        &trans        &trans
            >;
        };
    };
};
